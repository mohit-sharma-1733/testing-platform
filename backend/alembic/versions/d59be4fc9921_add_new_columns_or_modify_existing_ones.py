"""Add new columns or modify existing ones

Revision ID: d59be4fc9921
Revises: 
Create Date: 2024-11-15 13:23:14.590978

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'd59be4fc9921'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('question_responses', sa.Column('session_id', sa.Integer(), nullable=False))
    op.add_column('question_responses', sa.Column('text_response', sa.Text(), nullable=True))
    op.drop_constraint('fk_question_responses_test_session_id', 'question_responses', type_='foreignkey')
    op.create_foreign_key(None, 'question_responses', 'test_sessions', ['session_id'], ['id'])
    op.drop_column('question_responses', 'points_earned')
    op.drop_column('question_responses', 'test_session_id')
    op.drop_column('question_responses', 'answered_at')
    op.drop_column('question_responses', 'response_text')
    op.add_column('response_options', sa.Column('response_id', sa.Integer(), nullable=False))
    op.drop_constraint('response_options_question_response_id_fkey', 'response_options', type_='foreignkey')
    op.create_foreign_key(None, 'response_options', 'question_responses', ['response_id'], ['id'])
    op.drop_column('response_options', 'question_response_id')
    op.add_column('test_sessions', sa.Column('start_time', sa.DateTime(), nullable=False))
    op.add_column('test_sessions', sa.Column('end_time', sa.DateTime(), nullable=True))
    op.add_column('test_sessions', sa.Column('passed', sa.Boolean(), nullable=True))
    op.add_column('test_sessions', sa.Column('time_spent', sa.Integer(), nullable=True))
    op.add_column('test_sessions', sa.Column('remaining_time', sa.Integer(), nullable=True))
    op.drop_column('test_sessions', 'completed_at')
    op.drop_column('test_sessions', 'started_at')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('test_sessions', sa.Column('started_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('test_sessions', sa.Column('completed_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.drop_column('test_sessions', 'remaining_time')
    op.drop_column('test_sessions', 'time_spent')
    op.drop_column('test_sessions', 'passed')
    op.drop_column('test_sessions', 'end_time')
    op.drop_column('test_sessions', 'start_time')
    op.add_column('response_options', sa.Column('question_response_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'response_options', type_='foreignkey')
    op.create_foreign_key('response_options_question_response_id_fkey', 'response_options', 'question_responses', ['question_response_id'], ['id'])
    op.drop_column('response_options', 'response_id')
    op.add_column('question_responses', sa.Column('response_text', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('question_responses', sa.Column('answered_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True))
    op.add_column('question_responses', sa.Column('test_session_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('question_responses', sa.Column('points_earned', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'question_responses', type_='foreignkey')
    op.create_foreign_key('fk_question_responses_test_session_id', 'question_responses', 'test_sessions', ['test_session_id'], ['id'])
    op.drop_column('question_responses', 'text_response')
    op.drop_column('question_responses', 'session_id')
    # ### end Alembic commands ###
